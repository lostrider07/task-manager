package main

import (
	"time"

	"github.com/gin-gonic/gin"
	"github.com/go-redis/redis/v8"

	_ "task-manager/docs" // docs generated by Swag

	"task-manager/handlers"
	"task-manager/middleware"

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// @title Task API
// @version 1.0
// @description This is a simple task management API with Redis rate limiting
// @host localhost:8080
// @BasePath /
func main() {
	// Create Gin router
	router := gin.Default()

	// Initialize Redis client
	redisClient := redis.NewClient(&redis.Options{
		Addr: "localhost:6379",
		DB:   0,
	})

	// Apply Redis rate limiting middleware (X requests/minute)
	router.Use(middleware.RateLimiter(redisClient, 5, time.Minute))

	// Swagger route
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// API routes
	router.GET("/tasks", handlers.GetTasks)
	router.POST("/tasks", handlers.CreateTask)
	router.GET("/tasks/:id", handlers.GetTask)

	// Start server
	router.Run(":8080")
}
