basePath: /
definitions:
  models.ErrorResponse:
    properties:
      error:
        example: not found
        type: string
    type: object
  models.Task:
    properties:
      details:
        example: From the nearby store
        type: string
      id:
        example: "1"
        type: string
      title:
        example: Buy milk
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple task management API with Redis rate limiting
  title: Task API
  version: "1.0"
paths:
  /tasks:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
      summary: List tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Task to create
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
      summary: Create task
  /tasks/{id}:
    get:
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a task
swagger: "2.0"
